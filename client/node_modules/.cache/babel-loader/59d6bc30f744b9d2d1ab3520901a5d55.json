{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\izara\\\\Desktop\\\\Projects\\\\socketIo and game practice\\\\tic-tac-toe-multiplayer-api\\\\client\\\\src\\\\components\\\\SignUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Signup() {\n  _s();\n\n  // Whatever the user types in is updated through the use of states. Initialized to null at start since will be\n  // progressively updated into an object of all the user's information\n  const [user, setUser] = useState(null);\n\n  const signUp = () => {\n    console.log(\"spaghetti\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signUp\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \" Sign Up \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"First Name\",\n      onChange: event => {\n        // Spread operator used to keep the rest of the user object's values the same while only updating\n        // the one object value we want to. In this case firstName value in the object.\n        setUser({ ...user,\n          firstName: event.target.value\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Last Name\",\n      onChange: event => {\n        setUser({ ...user,\n          lastName: event.target.value\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Username\",\n      onChange: event => {\n        setUser({ ...user,\n          username: event.target.value\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Password\",\n      onChange: event => {\n        setUser({ ...user,\n          password: event.target.value\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: signUp,\n      children: \" Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Signup, \"Iei9RGtZU29Y1RhBe1sbfh/MntA=\");\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","Signup","user","setUser","signUp","console","log","event","firstName","target","value","lastName","username","password"],"sources":["C:/Users/izara/Desktop/Projects/socketIo and game practice/tic-tac-toe-multiplayer-api/client/src/components/SignUp.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction Signup() {\r\n  // Whatever the user types in is updated through the use of states. Initialized to null at start since will be\r\n  // progressively updated into an object of all the user's information\r\n  const [user, setUser] = useState(null);\r\n\r\n  const signUp = () => {\r\n    console.log(\"spaghetti\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"signUp\">\r\n      <label> Sign Up </label>\r\n      <input\r\n        placeholder=\"First Name\"\r\n        onChange={(event) => {\r\n          // Spread operator used to keep the rest of the user object's values the same while only updating\r\n          // the one object value we want to. In this case firstName value in the object.\r\n          setUser({ ...user, firstName: event.target.value });\r\n        }}\r\n      />\r\n      <input\r\n        placeholder=\"Last Name\"\r\n        onChange={(event) => {\r\n          setUser({ ...user, lastName: event.target.value });\r\n        }}\r\n      />\r\n      <input\r\n        placeholder=\"Username\"\r\n        onChange={(event) => {\r\n          setUser({ ...user, username: event.target.value });\r\n        }}\r\n      />\r\n      <input\r\n        placeholder=\"Password\"\r\n        onChange={(event) => {\r\n          setUser({ ...user, password: event.target.value });\r\n        }}\r\n      />\r\n      <button onClick={signUp}> Sign Up</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,MAAT,GAAkB;EAAA;;EAChB;EACA;EACA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,IAAD,CAAhC;;EAEA,MAAMI,MAAM,GAAG,MAAM;IACnBC,OAAO,CAACC,GAAR,CAAY,WAAZ;EACD,CAFD;;EAIA,oBACE;IAAK,SAAS,EAAC,QAAf;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MACE,WAAW,EAAC,YADd;MAEE,QAAQ,EAAGC,KAAD,IAAW;QACnB;QACA;QACAJ,OAAO,CAAC,EAAE,GAAGD,IAAL;UAAWM,SAAS,EAAED,KAAK,CAACE,MAAN,CAAaC;QAAnC,CAAD,CAAP;MACD;IANH;MAAA;MAAA;MAAA;IAAA,QAFF,eAUE;MACE,WAAW,EAAC,WADd;MAEE,QAAQ,EAAGH,KAAD,IAAW;QACnBJ,OAAO,CAAC,EAAE,GAAGD,IAAL;UAAWS,QAAQ,EAAEJ,KAAK,CAACE,MAAN,CAAaC;QAAlC,CAAD,CAAP;MACD;IAJH;MAAA;MAAA;MAAA;IAAA,QAVF,eAgBE;MACE,WAAW,EAAC,UADd;MAEE,QAAQ,EAAGH,KAAD,IAAW;QACnBJ,OAAO,CAAC,EAAE,GAAGD,IAAL;UAAWU,QAAQ,EAAEL,KAAK,CAACE,MAAN,CAAaC;QAAlC,CAAD,CAAP;MACD;IAJH;MAAA;MAAA;MAAA;IAAA,QAhBF,eAsBE;MACE,WAAW,EAAC,UADd;MAEE,QAAQ,EAAGH,KAAD,IAAW;QACnBJ,OAAO,CAAC,EAAE,GAAGD,IAAL;UAAWW,QAAQ,EAAEN,KAAK,CAACE,MAAN,CAAaC;QAAlC,CAAD,CAAP;MACD;IAJH;MAAA;MAAA;MAAA;IAAA,QAtBF,eA4BE;MAAQ,OAAO,EAAEN,MAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QA5BF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgCD;;GAzCQH,M;;KAAAA,M;AA2CT,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}